<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<rulesets>
  
  <!-- RULESET COMBINATIONS -->

  <!-- default -->
  <ruleset active="y" name="browse_min" condition="protos:browse_min">
    <rule active="y" ruleset="icmp" />
    <rule active="y" ruleset="dns" />
    <rule active="y" ruleset="local" />
    <rule active="y" ruleset="https" />
  </ruleset>

  <!-- mail -->
  <ruleset active="y" name="browse_mail" condition="protos:browse_mail">
    <rule active="y" ruleset="icmp" />
    <rule active="y" ruleset="dns" />
    <rule active="y" ruleset="local" />
    <rule active="y" ruleset="https" />
    <rule active="y" ruleset="gmail" />
  </ruleset>

  <!-- TESTS -->

  <!-- check chain builds -->
  <ruleset active="y" name="c_cbuilds">
    <rule active="y" table="nat" chain="input-a-b-c-d-e-f" target="ACCEPT" />
    <rule active="y" table="nat" chain="OUTPUT" target="ACCEPT" />
  </ruleset>

  <!-- TOOLS -->

  <!-- dhcp,dhclient -->
  <ruleset active="y" name="dhcp" condition="option:dhcp">
    <rule active="y"
          chain="INPUT" if-in="wlan0" protocol="udp" 
          sports="67,68" 
          state="ESTABLISHED" target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [DHCLIENT IN]:" />
    <rule active="y"
          chain="OUTPUT" if-out="wlan0" protocol="udp" 
          dports="67,68"
          state="NEW,ESTABLISHED" target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [DHCLIENT OUT]:" />
  </ruleset>

  <!-- gmail -->
  <ruleset active="y" name="gmail">
    <rule active="y" chain="INPUT" protocol="tcp" if-in="wlan0"
          destination="10.0.0.10/32" source="74.125.136.108/32,74.125.136.109/32,173.194.65.108/32,173.194.65.109/32" 
          sports="993,587" state="ESTABLISHED" target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [GMAIL IN]: " />
    <rule active="y" chain="OUTPUT" protocol="tcp" if-out="wlan0"
          source="10.0.0.10/32" destination="74.125.136.108/32,74.125.136.109/32,173.194.65.108/32,173.194.65.109/32" 
          dports="993,587" state="NEW,ESTABLISHED" target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [GMAIL OUT]: " />
  </ruleset>

  <!-- PURE -->

  <!-- invalids -->
  <ruleset active="y" name="invalid">
    <rule active="y" chain="INPUT" state="INVALID" target="DROP" 
          log="y" log-level="debug" log-prefix="iptables: [INV IN]:" />
    <rule active="y" chain="OUTPUT" state="INVALID" target="DROP" 
          log="y" log-level="debug" log-prefix="iptables: [INV OUT]:" />
    <rule active="y" chain="FORWARD" state="INVALID" target="DROP" 
          log="y" log-level="debug" log-prefix="iptables: [INV FWD]:" />
  </ruleset>

  <!-- icmp -->
  <ruleset active="y" name="icmp">
    <rule active="y"
          chain="INPUT" protocol="icmp" 
          source="10.0.0.0/8" destination="10.0.0.0/8" 
          target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [ICMP IN]:" />
    <rule active="y"
          chain="OUTPUT" protocol="icmp" 
          source="10.0.0.0/8" destination="10.0.0.0/8" 
          target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [ICMP OUT]:" />
  </ruleset>

  <!-- dns -->
  <ruleset active="y" name="dns">
    <rule active="y"
          chain="INPUT" protocol="udp" if-in="wlan0" 
          destination="10.0.0.10/32"
          sports="53" state="ESTABLISHED" target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [DNS IN]:" />
    <rule active="y"
          chain="OUTPUT" protocol="udp" if-out="wlan0" 
          source="10.0.0.10/32"
          dports="53" state="NEW,ESTABLISHED" target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [DNS OUT]:" />
  </ruleset>

  <!-- https -->
  <ruleset active="y" name="https">
    <rule active="y"
          chain="INPUT" protocol="tcp" if-in="wlan0" 
          destination="10.0.0.10/32"
          sports="80,443" state="ESTABLISHED" target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [HTTPS IN]:" />
    <rule active="y"
          chain="OUTPUT" protocol="tcp" if-out="wlan0" 
          source="10.0.0.10/32"
          dports="80,443" state="NEW,ESTABLISHED" target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [HTTPS OUT]:" />
  </ruleset>

  <!-- local -->
  <ruleset active="y" name="local">
    <rule active="y" chain="INPUT" protocol="tcp" if-in="lo" 
          atype="LOCAL:LOCAL" state="NEW,ESTABLISHED" target="ACCEPT"
          log="y" log-level="debug" log-prefix="iptables: [LOCAL IN]: " />
    <rule active="y" chain="OUTPUT" protocol="tcp" if-out="lo" 
          atype="LOCAL:LOCAL" state="NEW,ESTABLISHED" target="ACCEPT"
          log="y" log-level="debug" log-prefix="iptables: [LOCAL OUT]: " />
  </ruleset>

  <!-- forward/route -->
  <ruleset active="y" name="route">
    <rule active="y" table="nat" chain="POSTROUTING" 
          if-out="wlan0" source="10.0.0.7/32" 
          state="NEW,ESTABLISHED" target="MASQUERADE"
          log="y" log-level="debug" log-prefix="iptables: [RT ETH0 MASQ]:" />
    <rule active="y" chain="FORWARD" if-in="eth0" if-out="wlan0" 
          destination="0.0.0.0/0" source="10.0.0.0/8" 
          state="NEW,ESTABLISHED" target="ACCEPT"
          log="y" log-level="debug" log-prefix="iptables: [RT ETH0 FWDI]:" />
    <rule active="y" chain="FORWARD" if-in="wlan0" if-out="eth0" 
          source="0.0.0.0/0" destination="10.0.0.0/8" 
          state="ESTABLISHED" target="ACCEPT"
          log="y" log-level="debug" log-prefix="iptables: [RT ETH0 FWDO]:" />
    <rule active="y" chain="OUTPUT" if-out="eth0"
          source="10.0.0.8/32" destination="10.0.0.0/8" 
          state="NEW,ESTABLISHED" target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [RT ETH0 OUT]:" />
    <rule active="y" chain="INPUT" if-in="eth0"
          destination="10.0.0.8/32" source="10.0.0.0/8" 
          state="ESTABLISHED" target="ACCEPT" 
          log="y" log-level="debug" log-prefix="iptables: [RT ETH0 IN]:" />
  </ruleset>

  <!-- OTHERS -->

  <!-- docker -->
  <!-- TODO: check for presence of docker container when grabbing ipv4addresses from the docker network -->
  <ruleset active="y" name="docker" nested="n">
    <!-- filter -->
    <rule active="y" chain="output-docker" if-out="docker1" 
          source="$(docker network inspect -f '{{range .IPAM.Config}}{{.Subnet}}{{end}}' DCNTPLACEHOLDER)"
          destination="$(docker network inspect -f '{{range .IPAM.Config}}{{.Subnet}}{{end}}' DCNTPLACEHOLDER)"
          target="ACCEPT" log="y" log-level="debug" log-prefix="iptables: [DCR OUT]: "/>
    <rule active="y" chain="input-docker" if-in="docker1" 
          source="$(docker network inspect -f '{{range .IPAM.Config}}{{.Subnet}}{{end}}' DCNTPLACEHOLDER)" 
          destination="$(docker network inspect -f '{{range .IPAM.Config}}{{.Subnet}}{{end}}' DCNTPLACEHOLDER)" 
          target="ACCEPT" log="y" log-level="debug" log-prefix="iptables: [DCR IN]: "/>
    <rule active="y" chain="forward-docker-isolation" if-in="docker1" if-out="docker0" 
          target="DROP" log="y" log-level="debug" log-prefix="iptables: [DCR ISO FWD]: "/>
    <rule active="y" chain="forward-docker-isolation" if-in="docker0" if-out="docker1"
          target="DROP" log="y" log-level="debug" log-prefix="iptables: [DCR ISO FWD]: "/>
    <rule active="y" chain="forward-docker-isolation" target="RETURN" log="y" 
          log-level="debug" log-prefix="iptables: [DCR ISO FWD]: "/>
    <rule active="y" chain="forward-docker-services" protocol="tcp" if-in="!docker1" 
          if-out="docker1" destination="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          dports="1111,2222,3333" target="ACCEPT" log="y" log-level="debug" 
          log-prefix="iptables: [DCR MOQ FWD]: "/>
    <rule active="y" chain="forward-docker-services" protocol="tcp" if-in="!docker1" if-out="docker1" 
          destination="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          dports="4444" target="ACCEPT" log="y" log-level="debug" 
          log-prefix="iptables: [DCR ADM FWD]: "/>
    <rule active="y" chain="forward-docker-services" protocol="tcp" if-in="!docker1"
          if-out="docker1" destination="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          dports="5555" target="ACCEPT" log="y" log-level="debug" log-prefix="iptables: [DCR DB FWD]: "/>
    <rule active="y" chain="forward-docker-services" protocol="tcp" if-in="!docker1" 
          if-out="docker1" 
          destination="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          dports="6666" target="ACCEPT" log="y" log-level="debug" 
          log-prefix="iptables: [DCR WIF FWD]: "/>
    <rule active="y" chain="forward-docker" target="forward-docker-isolation"/>
    <rule active="y" chain="forward-docker" if-out="docker1" 
          target="forward-docker-services"/>
    <rule active="y" chain="forward-docker" if-out="docker1" state="RELATED,ESTABLISHED" 
          target="ACCEPT" log="y" log-level="debug" log-prefix="iptables: [DCR FWD]: "/>
    <rule active="y" chain="forward-docker" if-in="docker1" if-out="!docker1" 
          target="ACCEPT" log="y" log-level="debug" log-prefix="iptables: [DCR FWD]: "/>
    <rule active="y" chain="forward-docker" if-in="docker1" if-out="docker1" target="ACCEPT"
          log="y" log-level="debug" log-prefix="iptables: [DCR FWD]: "/>
    <!-- nat -->
    <rule active="y" table="nat" chain="prerouting-docker-services" if-in="docker0" 
          target="RETURN" log="n" log-level="debug" log-prefix="iptables: [DCR NAT RET]: "/>
    <rule active="y" table="nat" chain="prerouting-docker-services" if-in="docker1" 
          target="RETURN" log="n" log-level="debug" log-prefix="iptables: [DCR NAT RET]: "/>
    <rule active="y" table="nat" chain="prerouting-docker-services" protocol="tcp" if-in="!docker1" 
          target="DNAT:$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          dports="5555" log="n" log-level="debug" log-prefix="iptables: [DCR DNAT DB]: "/>
    <rule active="y" table="nat" chain="prerouting-docker-services" protocol="tcp" if-in="!docker1" 
          target="DNAT:$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          dports="4444" log="n" log-level="debug" log-prefix="iptables: [DCR DNAT ADM]: "/>
    <rule active="y" table="nat" chain="prerouting-docker-services" protocol="tcp" if-in="!docker1" 
          target="DNAT:$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          dports="1111,2222,3333" log="n" log-level="debug" log-prefix="iptables: [DCR DNAT MOQ]: "/>
    <rule active="y" table="nat" chain="prerouting-docker-services" protocol="tcp" if-in="!docker1" 
          target="DNAT:$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          dports="6666" log="n" log-level="debug" log-prefix="iptables: [DCR DNAT WIF]: "/>
    <rule active="y" table="nat" chain="prerouting-docker" atype=":LOCAL" 
          target="prerouting-docker-services" log="n" log-level="debug" 
          log-prefix="iptables: [DCR NAT PRE]: "/>
    <rule active="y" table="nat" chain="output-docker" atype=":LOCAL" 
          destination="!127.0.0.0/8" target="prerouting-docker-services" log="n" 
          log-level="debug" log-prefix="iptables: [DCR NAT OUT]: "/>
    <rule active="y" table="nat" chain="postrouting-docker" if-out="!docker0" 
          source="$(docker network inspect -f '{{range .IPAM.Config}}{{.Subnet}}{{end}}' DCNTPLACEHOLDER)" 
          target="MASQUERADE" log="n" log-level="debug" log-prefix="iptables: [DCR NAT POST]: "/>
    <rule active="y" table="nat" chain="postrouting-docker" if-out="!docker1" 
          source="$(docker network inspect -f '{{range .IPAM.Config}}{{.Subnet}}{{end}}' DCNTPLACEHOLDER)" 
          target="MASQUERADE" log="n" log-level="debug" log-prefix="iptables: [DCR NAT POST]: "/>
    <rule active="y" table="nat" chain="postrouting-docker" protocol="tcp" 
          source="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          destination="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)"
          dports="5555" target="MASQUERADE" log="n" log-level="debug" 
          log-prefix="iptables: [DCR NAT POST]: "/>
    <rule active="y" table="nat" chain="postrouting-docker" protocol="tcp" 
          source="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          destination="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)" 
          dports="4444" target="MASQUERADE" log="n" log-level="debug" 
          log-prefix="iptables: [DCR NAT POST]: "/>
    <rule active="y" table="nat" chain="postrouting-docker" protocol="tcp" 
          source="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)"
          destination="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)"
          dports="1111,2222,3333" target="MASQUERADE" log="n" log-level="debug"
          log-prefix="iptables: [DCR NAT POST]: "/>
    <rule active="y" table="nat" chain="postrouting-docker" protocol="tcp" 
          source="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)"
          destination="$(docker network inspect -f '{{range .Containers}}{{if eq .Name &quot;DCNTPLACEHOLDER&quot;}}{{.IPv4Address}}{{end}}{{end}}' DCNTPLACEHOLDER | cut -d'/' -f1)"
          dports="6666" target="MASQUERADE" log="n" log-level="debug" 
          log-prefix="iptables: [DCR NAT POST]: "/>
  </ruleset>

  <!-- log_others -->
  <ruleset active="y" name="log_others">
    <rule active="y" chain="INPUT" target="" 
          log="y" log-level="debug" log-prefix="iptables: [OTHER IN]:" />
    <rule active="y" chain="OUTPUT" target="" 
          log="y" log-level="debug" log-prefix="iptables: [OTHER OUT]:" />
    <rule active="y" chain="FORWARD" target="" 
          log="y" log-level="debug" log-prefix="iptables: [OTHER FWD]:" />
  </ruleset>

  <!-- reject -->
  <ruleset active="y" name="reject">
    <rule active="y" chain="INPUT" target="REJECT" log="n"/>
    <rule active="y" chain="OUTPUT" target="REJECT" log="n" />
    <rule active="y" chain="FORWARD" target="REJECT" log="n" />
  </ruleset>

  <!-- all -->

</rulesets>

